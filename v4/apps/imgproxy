{"captainVersion":4,"caproverOneClickApp":{"displayName":"imgproxy (Skayo)","description":"Fast and secure standalone server for resizing and converting remote images","instructions":{"start":"![imgproxy logo](https://github.com/imgproxy/imgproxy/blob/master/docs/assets/favicon-128.png?raw=true)\n\n🌐 [Website](https://imgproxy.net/)\n📖 [Documentation](https://docs.imgproxy.net/)\n📁 [GitHub](https://github.com/imgproxy/imgproxy)\n🐳 [DockerHub](https://hub.docker.com/r/darthsim/imgproxy/)\n👛 [Go Pro](https://imgproxy.net/#pro)\n\nimgproxy is a fast and secure standalone server for resizing and converting remote images.\nThe main principles of imgproxy are simplicity, speed, and security.\n\nimgproxy can be used to provide a fast and secure way to replace all the image resizing code of your web application (like calling ImageMagick or GraphicsMagick, or using libraries),\nwhile also being able to resize everything on the fly, fast and easy.\nimgproxy is also indispensable when handling lots of image resizing, especially when images come from a remote source.\n\nimgproxy does one thing — resizing remote images — and does it well.\nIt works great when you need to resize multiple images on the fly to make them match your application design without preparing a ton of cached resized images or re-doing it every time the design changes.","end":"🎉🎉🎉 Successfully deployed!  \nCheck it out at: http://$$cap_appname.$$cap_root_domain\n\n> *NOTE*: There's a lot of environment variables you can set.\n> Click [here](https://docs.imgproxy.net/configuration) for a complete list."},"documentation":"https://docs.imgproxy.net/","isOfficial":true,"variables":[{"id":"$$cap_appversion","label":"App Version","description":"Specify the version tag to install.  \nClick [here](https://hub.docker.com/r/darthsim/imgproxy/tags) for a list of available tags.","defaultValue":"v2.17.0","validRegex":"/^v\\d+(?:\\.\\d+(?:\\.\\d+)?)?(?:\\.beta\\d+|\\.rc\\d+)?$/"}]},"services":{"$$cap_appname":{"image":"darthsim/imgproxy:$$cap_appversion","hostname":"$$cap_appname.$$cap_root_domain","environment":{"IMGPROXY_BIND":"0.0.0.0:80"}}}}

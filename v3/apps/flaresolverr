{"captainVersion":2,"dockerCompose":{"services":{"$$cap_appname":{"image":"ghcr.io/flaresolverr/flaresolverr:$$cap_appversion","hostname":"$$cap_appname.$$cap_root_domain","environment":{"TZ":"$$cap_tz","PORT":80}}}},"variables":[{"id":"$$cap_appversion","label":"App Version","description":"Specify the version tag to install.  \nClick [here](https://hub.docker.com/r/flaresolverr/flaresolverr/tags) for a list of available tags.","defaultValue":"v2.0.2","validRegex":"/^v\\d+\\.\\d+\\.\\d+$/"},{"id":"$$cap_tz","label":"Time Zone","description":"Specify your system's time zone.  \nClick [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for a list of available time zones.","defaultValue":"Europe/Vienna","validRegex":"/^\\w+\\/\\w+$/"}],"instructions":{"start":"📁 [GitHub](https://github.com/FlareSolverr/FlareSolverr)\n🐳 [DockerHub](https://hub.docker.com/r/flaresolverr/flaresolverr)\n👛 [Donate](https://www.buymeacoffee.com/ngosang)\n\nFlareSolverr starts a proxy server and it waits for user requests in an idle state using few resources.\nWhen some request arrives, it uses puppeteer with the stealth plugin to create a headless browser (Firefox).\nIt opens the URL with user parameters and waits until the Cloudflare challenge is solved (or timeout).\nThe HTML code and the cookies are sent back to the user, and those cookies can be used to bypass Cloudflare using other HTTP clients.\n\nVery useful for [Jackett](https://github.com/Jackett/Jackett) or [Prowlarr](https://prowlarr.com/).","end":"🎉🎉🎉 Successfully deployed!  \nCheck it out at: http://$$cap_appname.$$cap_root_domain"},"displayName":"FlareSolverr (Skayo)","isOfficial":true,"description":"FlareSolverr is a proxy server to bypass Cloudflare protection","documentation":"https://github.com/FlareSolverr/FlareSolverr"}
